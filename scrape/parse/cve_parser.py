import os.path
import json
from django.conf import settings
from cve_data.models import *

ROOT = settings.BASE_DIR + '/../static'

class CveParser:
    
    def __init__(self, file_path):
    	self.__file_path = ROOT + file_path
    	self.__file_exists = os.path.isfile(self.__file_path)

    @property
    def file_path(self):
    	return self.__file_path

    @file_path.setter
    def file_path(self, file_path):
    	self.__file_path = ROOT + file_path
    	self.__file_exists = os.path.isfile(self.__file_path)

    @property
    def file_exists(self):
    	return self.__file_exists

    def parse(self):
        return_data = []
        
    	if self.__file_exists:
            with open(self.__file_path) as data_file:    
                data = json.load(data_file)
                for datum in data:
                    if 'cve' in datum:
                        # First, create the CVE object
                        cve = CVE()
                        cve.cve_id = datum['cve']['CVE_data_meta']['ID']
                        cve.description = datum['cve']['description']['description_data'][0]['value']
                        cve.date = datum['publishedDate']

                        # Create the CVE Score objects (TODO)

                        return_data.append(cve)
            return return_data
        else:
            return None
